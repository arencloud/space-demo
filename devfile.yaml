schemaVersion: 2.2.0
metadata:
  name: space-demo

projects:
  - attributes:
      source-origin: branch
    name: space-demo
    git:
      checkoutFrom:
        revision: 'main'
      remotes:
        origin: 'https://github.com/arencloud/space-demo.git'
components:
  - name: tools
    container:
      image: registry.redhat.io/devspaces/udi-rhel8:3.9-18
      memoryLimit: '2Gi'
      mountSources: true
      env:
        - name: COCACHE
          value: /tmp/.cache
        - name: WORKSPACE_DEV_PROJ
          value: space-demo-dev
      endpoints:
        - exposure: public
          name: 'space-demo'
          protocol: http
          targetPort: 8080
  - name: mysql
    container:
      image: mysql:latest
      memoryLimit: '512Mi'
      mountSources: true
      env:
        - name: MYSQL_PASSWORD
          value: demo123
        - name: MYSQL_USER
          value: spacedemo
        - name: MYSQL_DATABASE
          value: spacedemo
        - name: MYSQL_ROOT_PASSWORD
          value: demo123
      endpoints:
        - exposure: internal
          name: 'mysql'
          protocol: tcp
          targetPort: 3306
commands:
  - id: build
    exec:
      label: 1.Build
      component: tools
      workingDir: ${PROJECTS_ROOT}/space-demo
      commandLine: go build -o space-demo
  - id: test
    exec:
      label: 2.Test
      component: tools
      workingDir: ${PROJECTS_ROOT}/space-demo
      commandLine: go test -v
  - id: inner-loop-api-deploy
    exec:
      label: 3.Inner-loop-api-deploy
      commandLine: 'oc new-project ${WORKSPACE_DEV_PROJ} && oc create secret generic mysql --from-literal=user=spacedemo --from-literal=password=$(echo $RANDOM | md5sum | head -c 20; echo;) --from-literal=root_password=$(echo $RANDOM | md5sum | head -c 30; echo;) --from-literal=database=spacedemo --from-literal=host=mysql --namespace ${WORKSPACE_DEV_PROJ} && 
      oc new-app --name mysql --image mysql:latest --namespace ${WORKSPACE_DEV_PROJ} && oc set env deployment/mysql --prefix MYSQL_ --from secret/mysql --namespace ${WORKSPACE_DEV_PROJ} && oc new-build rhel8/go-toolset:latest --name space-demo --labels=component=api --binary=true  --allow-missing-images --strategy=source --to space-demo:dev --namespace ${WORKSPACE_DEV_PROJ} &&
      oc start-build space-demo --from-dir=. -w --namespace ${WORKSPACE_DEV_PROJ} && oc new-app --name space-demo space-demo:dev -e MYSQL_PORT=3306 --labels=app=space-demo,app.kubernetes.io/instance=api,app.openshift.io/runtime=go --namespace ${WORKSPACE_DEV_PROJ} && oc set env deployment/space-demo --prefix MYSQL_ --from secret/mysql --namespace ${WORKSPACE_DEV_PROJ} &&
      oc expose deployment/space-demo --port 8080 --namespace ${WORKSPACE_DEV_PROJ} && oc expose svc space-demo --namespace ${WORKSPACE_DEV_PROJ} && oc get route space-demo --output jsonpath={.spec.host} --namespace ${WORKSPACE_DEV_PROJ}'
      component: tools
  - id: inner-loop-api-destroy
    exec:
      label: 4.Inner-loop-api-destroy
      commandLine: 'oc delete project ${WORKSPACE_DEV_PROJ}'
      component: tools



