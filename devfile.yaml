schemaVersion: 2.2.0
metadata:
  name: space-demo
projects:
  - attributes:
      source-origin: branch
    name: space-demo
    git:
      checkoutFrom:
        revision: 'main'
      remotes:
        origin: 'https://github.com/arencloud/space-demo.git'
components:
  - name: tools
    container:
      image: registry.redhat.io/devspaces/udi-rhel8:3.9-18
      memoryLimit: '2Gi'
      mountSources: true
      env:
        - name: COCACHE
          value: /tmp/.cache
        - name: SPACE_DEMO_DB_HOST
          value: localhost
        - name: SPACE_DEMO_DB_PORT
          value: '3306'
        - name: SPACE_DEMO_DB_USER
          value: spacedemo
        - name: SPACE_DEMO_DB_PASSWORD
          value: 'demo123'
        - name: SPACE_DEMO_DB_DATABASE
          value: spacedemo
      endpoints:
        - exposure: public
          name: 'web'
          secure: true
          protocol: http
          targetPort: 8080
  - name: mysql
    container:
      image: mysql:latest
      memoryLimit: '512Mi'
      mountSources: true
      env:
        - name: MYSQL_PASSWORD
          value: demo123
        - name: MYSQL_USER
          value: spacedemo
        - name: MYSQL_DATABASE
          value: spacedemo
        - name: MYSQL_ROOT_PASSWORD
          value: demo123
      endpoints:
        - exposure: internal
          name: 'mysql'
          protocol: tcp
          targetPort: 3306
commands:
  - id: run
    exec:
      label: 1.Running Application
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: go run main.go
  - id: test
    exec:
      label: 2.Testing Application
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: go test -v ./tests/
  - id: rebuild-app-image
    exec:
      label: Inner-loop - Rebuild Application
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: 'oc start-build space-demo --from-dir=. -w --namespace ${DEVWORKSPACE_ID}-dev'
  - id: inner-loop-app-full-stack-deploy
    exec:
      label: 3.Inner-loop - Full Stack Deploy
      workingDir: ${PROJECT_SOURCE}
      component: tools
      commandLine: 'oc new-project ${DEVWORKSPACE_ID}-dev &&
        oc create secret generic mysql --from-literal=user=spacedemo --from-literal=password=$(echo $RANDOM | md5sum | head -c 20; echo;) --from-literal=root_password=$(echo $RANDOM | md5sum | head -c 30; echo;) --from-literal=database=spacedemo --from-literal=host=mysql --namespace ${DEVWORKSPACE_ID}-dev &&
        oc new-app --name mysql --image mysql:latest --namespace ${DEVWORKSPACE_ID}-dev && oc set env deployment/mysql --prefix MYSQL_ --from secret/mysql --namespace ${DEVWORKSPACE_ID}-dev &&
        oc new-build --name space-demo --labels=component=api  --binary=true --allow-missing-images --strategy=docker --to space-demo:dev --namespace ${DEVWORKSPACE_ID}-dev &&
        oc start-build space-demo --from-dir=. -w --namespace ${DEVWORKSPACE_ID}-dev &&
        oc new-app --name space-demo space-demo:dev -e SPACE_DEMO_DB_PORT=3306 --labels=app=space-demo,app.kubernetes.io/instance=api,app.openshift.io/runtime=go --namespace ${DEVWORKSPACE_ID}-dev &&
        oc set env deployment/space-demo --prefix  SPACE_DEMO_DB_ --from secret/mysql --namespace ${DEVWORKSPACE_ID}-dev &&
        oc expose deployment/space-demo --port 8080 --namespace ${DEVWORKSPACE_ID}-dev &&
        oc expose svc space-demo --namespace ${DEVWORKSPACE_ID}-dev &&
        Public:$(oc get route space-demo --output jsonpath={.spec.host} --namespace ${DEVWORKSPACE_ID}-dev)'
  - id: inner-loop-permanent-cleanup
    exec:
      workingDir: ${PROJECT_SOURCE}
      label: 4.Inner-loop - Full Stack Permanent Cleanup
      commandLine: 'oc delete project ${DEVWORKSPACE_ID}-dev'
      component: tools
  - id: inner-loop-tests
    exec:
      workingDir: ${PROJECT_SOURCE}
      label: 5.Inner-loop - Test Cases
      component: tools
      commandLine: 'bash .cases/test-cases.sh'
  - id: show-inner-loop-debug-urls
    exec:
      workingDir: ${PROJECT_SOURCE}
      label: 6.Run - Local developer debug urls
      component: tools
      commandLine: yq '.components[].container.endpoints | select(.)[].attributes."controller.devfile.io/endpoint-url" | select(.)' /devworkspace-metadata/flattened.devworkspace.yaml
